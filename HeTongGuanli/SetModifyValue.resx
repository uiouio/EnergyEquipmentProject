<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="commonFlowLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        avm9CQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>